// Code generated by MockGen. DO NOT EDIT.
// Source: golangwithgin/internal/domain (interfaces: TaskService)

// Package mocks is a generated GoMock package.
package mocks

import (
	domain "golangwithgin/internal/domain"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockTaskService is a mock of TaskService interface.
type MockTaskService struct {
	ctrl     *gomock.Controller
	recorder *MockTaskServiceMockRecorder
}

// MockTaskServiceMockRecorder is the mock recorder for MockTaskService.
type MockTaskServiceMockRecorder struct {
	mock *MockTaskService
}

// NewMockTaskService creates a new mock instance.
func NewMockTaskService(ctrl *gomock.Controller) *MockTaskService {
	mock := &MockTaskService{ctrl: ctrl}
	mock.recorder = &MockTaskServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTaskService) EXPECT() *MockTaskServiceMockRecorder {
	return m.recorder
}

// GetAllTasks mocks base method.
func (m *MockTaskService) GetAllTasks() ([]*domain.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTasks")
	ret0, _ := ret[0].([]*domain.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTasks indicates an expected call of GetAllTasks.
func (mr *MockTaskServiceMockRecorder) GetAllTasks() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTasks", reflect.TypeOf((*MockTaskService)(nil).GetAllTasks))
}

// GetTaskStatus mocks base method.
func (m *MockTaskService) GetTaskStatus(arg0 uint) (*domain.Task, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTaskStatus", arg0)
	ret0, _ := ret[0].(*domain.Task)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTaskStatus indicates an expected call of GetTaskStatus.
func (mr *MockTaskServiceMockRecorder) GetTaskStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTaskStatus", reflect.TypeOf((*MockTaskService)(nil).GetTaskStatus), arg0)
}

// SubmitTask mocks base method.
func (m *MockTaskService) SubmitTask(arg0 *domain.Task) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SubmitTask", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// SubmitTask indicates an expected call of SubmitTask.
func (mr *MockTaskServiceMockRecorder) SubmitTask(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SubmitTask", reflect.TypeOf((*MockTaskService)(nil).SubmitTask), arg0)
}
